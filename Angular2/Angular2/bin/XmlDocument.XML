<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Angular2</name>
    </assembly>
    <members>
        <member name="M:Angular2.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Angular2.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Angular2.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Angular2.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Angular2.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Angular2.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Angular2.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Angular2.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Angular2.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Angular2.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Angular2.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Angular2.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Angular2.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Angular2.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Angular2.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Angular2.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Angular2.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Angular2.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Angular2.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Angular2.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Angular2.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Angular2.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleKey.#ctor(Angular2.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Angular2.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Angular2.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Angular2.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Angular2.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Angular2.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Angular2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Angular2.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Angular2.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Angular2.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Angular2.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Angular2.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Angular2.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Angular2.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Angular2.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:Angular2.Controllers.AccountController.GetUserInfo">
            <summary>
            Gets current user information
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.GetUserProfile">
            <summary>
            Gets current user profile
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.UpdateProfile(Angular2.Models.UserProfileModel)">
            <summary>
            Updates user profile
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.Logout">
            <summary>
            Logout current user session
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.GetManageInfo(System.String,System.Boolean)">
            <summary>
            Manage user information
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.ChangePassword(Angular2.Models.ChangePasswordBindingModel)">
            <summary>
            Change Password
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.ForgotPassword(Angular2.Models.ForgotPasswordViewModel)">
            <summary>
            Forgot Password
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.SetPassword(Angular2.Models.SetPasswordBindingModel)">
            <summary>
            Sets the new password
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.AddExternalLogin(Angular2.Models.AddExternalLoginBindingModel)">
            <summary>
            Adds external login
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.RemoveLogin(Angular2.Models.RemoveLoginBindingModel)">
            <summary>
            Removes Login information
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.GetExternalLogin(System.String,System.String)">
            <summary>
            Gets external login information
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.Register(Angular2.Models.RegisterBindingModel)">
            <summary>
            Registers new user
            </summary>
        </member>
        <member name="M:Angular2.Controllers.AccountController.RegisterExternal(Angular2.Models.RegisterExternalBindingModel)">
            <summary>
            Registers new user with external login id
            </summary>
        </member>
        <member name="T:Angular2.Helper.AjaxMessagesFilter">
            <summary>
            If we're dealing with ajax requests, any message that is in the view data goes to
            the http header.
            </summary>
        </member>
        <member name="M:Angular2.Helper.HtmlHelperExtensions.RenderMessages(System.Web.Mvc.HtmlHelper)">
            <summary>
            Render all messages that have been set during execution of the controller action.
            </summary>
            <param name="htmlHelper"></param>
            <returns></returns>
        </member>
        <member name="T:Angular2.Models.ab041">
            <summary>
            Summary description for ab041.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab041.GetData">
            <summary>
            The purpose of this method is to get all ab041 data.
            </summary>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetData(System.String)">
            <summary>
            The purpose of this method is to get all ab041 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetData(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab041 data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetDetails(System.String)">
            <summary>
            The purpose of this method is to get the data based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetLookup">
            <summary>
            The purpose of this method is to get the lookup data
            </summary>
            <returns>returns Lookup Data as DataSet</returns>
        </member>
        <member name="M:Angular2.Models.ab041.Add(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new ab041 row.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab041.Update(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates a ab041
            </summary>
        </member>
        <member name="M:Angular2.Models.ab041.Delete(System.String)">
            <summary>
            The purpose of this method is to delete the record based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab041.DeleteFilter(System.String)">
            <summary>
            The purpose of this method is to delete all ab041 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>Returns the number of rows deleted</returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetList">
            <summary>
            Returns a collection with all the ab041Data
            </summary>
            <returns>List of ab041Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetList(System.String)">
            <summary>
            The purpose of this method is to get all ab041 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>List of ab041Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetList(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab041 data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>List of ab041Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab041.GetDetailsByID(System.String)">
            <summary>
            Returns an existing ab041Data object with the specified ID 
            </summary>
        </member>
        <member name="M:Angular2.Models.ab041.Add(Angular2.Models.ab041Data)">
            <summary>
            Creates a new ab041
            </summary>
        </member>
        <member name="M:Angular2.Models.ab041.Update(Angular2.Models.ab041Data)">
            <summary>
            Updates a ab041
            </summary>
        </member>
        <member name="T:Angular2.Models.ab062sg">
            <summary>
            Summary description for ab062sg.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetData">
            <summary>
            The purpose of this method is to get all ab062sg data.
            </summary>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetData(System.String)">
            <summary>
            The purpose of this method is to get all ab062sg data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetData(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab062sg data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetDetails(System.String)">
            <summary>
            The purpose of this method is to get the data based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetLookup">
            <summary>
            The purpose of this method is to get the lookup data
            </summary>
            <returns>returns Lookup Data as DataSet</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.Add(System.String,System.String,System.Decimal,System.String)">
            <summary>
            Creates a new ab062sg row.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab062sg.Update(System.String,System.String,System.Decimal,System.String)">
            <summary>
            Updates a ab062sg
            </summary>
        </member>
        <member name="M:Angular2.Models.ab062sg.Delete(System.String)">
            <summary>
            The purpose of this method is to delete the record based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.DeleteFilter(System.String)">
            <summary>
            The purpose of this method is to delete all ab062sg data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>Returns the number of rows deleted</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetList">
            <summary>
            Returns a collection with all the ab062sgData
            </summary>
            <returns>List of ab062sgData object</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetList(System.String)">
            <summary>
            The purpose of this method is to get all ab062sg data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>List of ab062sgData object</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetList(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab062sg data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>List of ab062sgData object</returns>
        </member>
        <member name="M:Angular2.Models.ab062sg.GetDetailsByID(System.String)">
            <summary>
            Returns an existing ab062sgData object with the specified ID 
            </summary>
        </member>
        <member name="M:Angular2.Models.ab062sg.Add(Angular2.Models.ab062sgData)">
            <summary>
            Creates a new ab062sg
            </summary>
        </member>
        <member name="M:Angular2.Models.ab062sg.Update(Angular2.Models.ab062sgData)">
            <summary>
            Updates a ab062sg
            </summary>
        </member>
        <member name="T:Angular2.Models.ab110">
            <summary>
            Summary description for ab110.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab110.GetData">
            <summary>
            The purpose of this method is to get all ab110 data.
            </summary>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetData(System.String)">
            <summary>
            The purpose of this method is to get all ab110 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetData(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab110 data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetDetails(System.String)">
            <summary>
            The purpose of this method is to get the data based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetLookup">
            <summary>
            The purpose of this method is to get the lookup data
            </summary>
            <returns>returns Lookup Data as DataSet</returns>
        </member>
        <member name="M:Angular2.Models.ab110.Add(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Creates a new ab110 row.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab110.Update(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Updates a ab110
            </summary>
        </member>
        <member name="M:Angular2.Models.ab110.Delete(System.String)">
            <summary>
            The purpose of this method is to delete the record based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab110.DeleteFilter(System.String)">
            <summary>
            The purpose of this method is to delete all ab110 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>Returns the number of rows deleted</returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetList">
            <summary>
            Returns a collection with all the ab110Data
            </summary>
            <returns>List of ab110Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetList(System.String)">
            <summary>
            The purpose of this method is to get all ab110 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>List of ab110Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetList(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab110 data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>List of ab110Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab110.GetDetailsByID(System.String)">
            <summary>
            Returns an existing ab110Data object with the specified ID 
            </summary>
        </member>
        <member name="M:Angular2.Models.ab110.Add(Angular2.Models.ab110Data)">
            <summary>
            Creates a new ab110
            </summary>
        </member>
        <member name="M:Angular2.Models.ab110.Update(Angular2.Models.ab110Data)">
            <summary>
            Updates a ab110
            </summary>
        </member>
        <member name="T:Angular2.Models.ab120">
            <summary>
            Summary description for ab120.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab120.GetData">
            <summary>
            The purpose of this method is to get all ab120 data.
            </summary>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetData(System.String)">
            <summary>
            The purpose of this method is to get all ab120 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetData(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab120 data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetDetails(System.String)">
            <summary>
            The purpose of this method is to get the data based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetLookup">
            <summary>
            The purpose of this method is to get the lookup data
            </summary>
            <returns>returns Lookup Data as DataSet</returns>
        </member>
        <member name="M:Angular2.Models.ab120.Add(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Creates a new ab120 row.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab120.Update(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Updates a ab120
            </summary>
        </member>
        <member name="M:Angular2.Models.ab120.Delete(System.String)">
            <summary>
            The purpose of this method is to delete the record based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab120.DeleteFilter(System.String)">
            <summary>
            The purpose of this method is to delete all ab120 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>Returns the number of rows deleted</returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetList">
            <summary>
            Returns a collection with all the ab120Data
            </summary>
            <returns>List of ab120Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetList(System.String)">
            <summary>
            The purpose of this method is to get all ab120 data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>List of ab120Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetList(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab120 data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>List of ab120Data object</returns>
        </member>
        <member name="M:Angular2.Models.ab120.GetDetailsByID(System.String)">
            <summary>
            Returns an existing ab120Data object with the specified ID 
            </summary>
        </member>
        <member name="M:Angular2.Models.ab120.Add(Angular2.Models.ab120Data)">
            <summary>
            Creates a new ab120
            </summary>
        </member>
        <member name="M:Angular2.Models.ab120.Update(Angular2.Models.ab120Data)">
            <summary>
            Updates a ab120
            </summary>
        </member>
        <member name="T:Angular2.Models.ab121sg">
            <summary>
            Summary description for ab121sg.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetData">
            <summary>
            The purpose of this method is to get all ab121sg data.
            </summary>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetData(System.String)">
            <summary>
            The purpose of this method is to get all ab121sg data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetData(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab121sg data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetDetails(System.String)">
            <summary>
            The purpose of this method is to get the data based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetLookup">
            <summary>
            The purpose of this method is to get the lookup data
            </summary>
            <returns>returns Lookup Data as DataSet</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.Add(System.String,System.String,System.String)">
            <summary>
            Creates a new ab121sg row.
            </summary>
        </member>
        <member name="M:Angular2.Models.ab121sg.Update(System.String,System.String,System.String)">
            <summary>
            Updates a ab121sg
            </summary>
        </member>
        <member name="M:Angular2.Models.ab121sg.Delete(System.String)">
            <summary>
            The purpose of this method is to delete the record based on specified primary key value
            </summary>
            <param name="sRefID">Primary key value</param>
            <returns></returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.DeleteFilter(System.String)">
            <summary>
            The purpose of this method is to delete all ab121sg data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>Returns the number of rows deleted</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetList">
            <summary>
            Returns a collection with all the ab121sgData
            </summary>
            <returns>List of ab121sgData object</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetList(System.String)">
            <summary>
            The purpose of this method is to get all ab121sg data based on the Filter Expression criteria.
            </summary>
            <param name="filterExpression">A NameValueCollection object that defines various properties.
            For example, filterExpression - Where condition to be passed in SQL statement.
            </param>
            <returns>List of ab121sgData object</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetList(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The purpose of this method is to get all ab121sg data based on filterExpression, sortExpression, pageIndex and pageSize parameters
            </summary>
            <param name="filterExpression">Where condition to be passed in SQL statement. DO NOT include WHERE keyword.</param>
            <param name="sortExpression">Sort column name with direction. For Example, "ProductID ASC")</param>
            <param name="pageIndex">Page number to be retrieved. Default is 0.</param>
            <param name="pageSize">Number of rows to be retrived. Default is 10.</param>
            <param name="rowsCount">Output: Total number of rows exist for the specified criteria.</param>
            <returns>List of ab121sgData object</returns>
        </member>
        <member name="M:Angular2.Models.ab121sg.GetDetailsByID(System.String)">
            <summary>
            Returns an existing ab121sgData object with the specified ID 
            </summary>
        </member>
        <member name="M:Angular2.Models.ab121sg.Add(Angular2.Models.ab121sgData)">
            <summary>
            Creates a new ab121sg
            </summary>
        </member>
        <member name="M:Angular2.Models.ab121sg.Update(Angular2.Models.ab121sgData)">
            <summary>
            Updates a ab121sg
            </summary>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.Getab041">
            <summary>
            Returns list of all ab041 Data
            </summary>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.Getab041(System.String)">
            <summary>
            Returns list of all ab041 Data based on specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.GetList(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns list of all ab041 Data by Page based on specified filter criteria, sort expression, page number and page size
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
            <param name="sortExpression">Order by field</param>
            <param name="pageIndex">Page number</param>
            <param name="pageSize">Number of records to retrieve per page</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.Getab041ById(System.String)">
            <summary>
            Returns a ab041 record based on specified ID
            </summary>
            <param name="id">The ID of ab041 data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.Postab041(Angular2.Models.ab041Data)">
            <summary>
            Creates a new ab041 entity
            </summary>
            <param name="objab041">ab041Data object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.Putab041(Angular2.Models.ab041Data)">
            <summary>
            Updates an existing ab041 entity
            </summary>
            <param name="objab041">ab041Data object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.Deleteab041(System.String)">
            <summary>
            Deletes ab041 record based on specified ID
            </summary>
            <param name="id">The ID of ab041 data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab041Controller.DeleteFilter(System.String)">
            <summary>
            Deletes ab041 data based on the specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.Getab062sg">
            <summary>
            Returns list of all ab062sg Data
            </summary>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.Getab062sg(System.String)">
            <summary>
            Returns list of all ab062sg Data based on specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.GetList(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns list of all ab062sg Data by Page based on specified filter criteria, sort expression, page number and page size
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
            <param name="sortExpression">Order by field</param>
            <param name="pageIndex">Page number</param>
            <param name="pageSize">Number of records to retrieve per page</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.Getab062sgById(System.String)">
            <summary>
            Returns a ab062sg record based on specified ID
            </summary>
            <param name="id">The ID of ab062sg data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.Postab062sg(Angular2.Models.ab062sgData)">
            <summary>
            Creates a new ab062sg entity
            </summary>
            <param name="objab062sg">ab062sgData object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.Putab062sg(Angular2.Models.ab062sgData)">
            <summary>
            Updates an existing ab062sg entity
            </summary>
            <param name="objab062sg">ab062sgData object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.Deleteab062sg(System.String)">
            <summary>
            Deletes ab062sg record based on specified ID
            </summary>
            <param name="id">The ID of ab062sg data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab062sgController.DeleteFilter(System.String)">
            <summary>
            Deletes ab062sg data based on the specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.Getab110">
            <summary>
            Returns list of all ab110 Data
            </summary>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.Getab110(System.String)">
            <summary>
            Returns list of all ab110 Data based on specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.GetList(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns list of all ab110 Data by Page based on specified filter criteria, sort expression, page number and page size
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
            <param name="sortExpression">Order by field</param>
            <param name="pageIndex">Page number</param>
            <param name="pageSize">Number of records to retrieve per page</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.Getab110ById(System.String)">
            <summary>
            Returns a ab110 record based on specified ID
            </summary>
            <param name="id">The ID of ab110 data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.Postab110(Angular2.Models.ab110Data)">
            <summary>
            Creates a new ab110 entity
            </summary>
            <param name="objab110">ab110Data object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.Putab110(Angular2.Models.ab110Data)">
            <summary>
            Updates an existing ab110 entity
            </summary>
            <param name="objab110">ab110Data object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.Deleteab110(System.String)">
            <summary>
            Deletes ab110 record based on specified ID
            </summary>
            <param name="id">The ID of ab110 data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab110Controller.DeleteFilter(System.String)">
            <summary>
            Deletes ab110 data based on the specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.Getab120">
            <summary>
            Returns list of all ab120 Data
            </summary>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.Getab120(System.String)">
            <summary>
            Returns list of all ab120 Data based on specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.GetList(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns list of all ab120 Data by Page based on specified filter criteria, sort expression, page number and page size
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
            <param name="sortExpression">Order by field</param>
            <param name="pageIndex">Page number</param>
            <param name="pageSize">Number of records to retrieve per page</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.Getab120ById(System.String)">
            <summary>
            Returns a ab120 record based on specified ID
            </summary>
            <param name="id">The ID of ab120 data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.Postab120(Angular2.Models.ab120Data)">
            <summary>
            Creates a new ab120 entity
            </summary>
            <param name="objab120">ab120Data object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.Putab120(Angular2.Models.ab120Data)">
            <summary>
            Updates an existing ab120 entity
            </summary>
            <param name="objab120">ab120Data object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.Deleteab120(System.String)">
            <summary>
            Deletes ab120 record based on specified ID
            </summary>
            <param name="id">The ID of ab120 data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab120Controller.DeleteFilter(System.String)">
            <summary>
            Deletes ab120 data based on the specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.Getab121sg">
            <summary>
            Returns list of all ab121sg Data
            </summary>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.Getab121sg(System.String)">
            <summary>
            Returns list of all ab121sg Data based on specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.GetList(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns list of all ab121sg Data by Page based on specified filter criteria, sort expression, page number and page size
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
            <param name="sortExpression">Order by field</param>
            <param name="pageIndex">Page number</param>
            <param name="pageSize">Number of records to retrieve per page</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.Getab121sgById(System.String)">
            <summary>
            Returns a ab121sg record based on specified ID
            </summary>
            <param name="id">The ID of ab121sg data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.Postab121sg(Angular2.Models.ab121sgData)">
            <summary>
            Creates a new ab121sg entity
            </summary>
            <param name="objab121sg">ab121sgData object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.Putab121sg(Angular2.Models.ab121sgData)">
            <summary>
            Updates an existing ab121sg entity
            </summary>
            <param name="objab121sg">ab121sgData object</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.Deleteab121sg(System.String)">
            <summary>
            Deletes ab121sg record based on specified ID
            </summary>
            <param name="id">The ID of ab121sg data</param>
        </member>
        <member name="M:Angular2.Models.Controllers.ab121sgController.DeleteFilter(System.String)">
            <summary>
            Deletes ab121sg data based on the specified filter criteria
            </summary>
            <param name="filterExpression">Filter expression/criteria</param>
        </member>
    </members>
</doc>
